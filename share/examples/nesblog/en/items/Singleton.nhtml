<h2><a name="NAME" href="#___top" title="click to go to top of document" class="u">NAME</a></h2>

<p>Nes::Singleton - Single access interface to Nes.</p>

<h2><a name="SYNOPSIS" href="#___top" title="click to go to top of document" class="u">SYNOPSIS</a></h2>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new(&#39;template.nhtml&#39;);

    my $config        = $nes-&#62;{&#39;CFG&#39;};
    my $cookies       = $nes-&#62;{&#39;cookies&#39;};
    my $session       = $nes-&#62;{&#39;session&#39;};
    my $query         = $nes-&#62;{&#39;query&#39;};
    my $top_container = $nes-&#62;{&#39;top_container&#39;};
    my $container     = $nes-&#62;{&#39;container&#39;};
    my $register      = $nes-&#62;{&#39;register&#39;}; 

    my $nes_tags = {};
    $nes_tags-&#62;{&#39;var_hello&#39;} = &#39;Hello World!&#39;;

    $nes-&#62;out(%$nes_tag);</pre>

<h2><a name="DESCRIPTION" href="#___top" title="click to go to top of document" class="u">DESCRIPTION</a></h2>

<p>Is a class for a single access interface to Nes. It aims to simplify the use of Nes, through a single instance to access the template that is running. Create all the necessary objects and returns an instance of this.</p>

<p>It also allows the template to be executed in different ways, calling the Perl script, calling to template or command line.</p>

<p>Nes should be run by calling the template, other methods are implemented to facilitate debugging.</p>

<p>It is an object of type singleton:</p>

<pre>    Nes::Singleton-&#62;new(&#39;template.nhtml&#39;); # returns a new instance
    Nes::Singleton-&#62;new(&#39;other.nhtml&#39;);    # returns same instance
    Nes::Singleton-&#62;new();                 # returns same instance</pre>

<p>In most cases you just need to do this:</p>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new(&#39;template.nhtml&#39;);
    my %tags;

    # the things that make your script...
    ...
    # set variables for output
    $tags{&#39;var_hello&#39;} = &#39;Hello World!&#39;;

    # the things that make your script...
    ...
    # send variables to Nes
    $nes-&#62;out(%tags);</pre>

<h2><a name="Nes::Singleton_Diagrams" href="#___top" title="click to go to top of document" class="u">Nes::Singleton Diagrams</a></h2>

<p>Nes::Singleton represents the Web page and its elements. Access to the various elements is through instances created by Nes::Singleton:</p>

<pre>    .--------------------------------------.
    |           Nes::Singleton             |-&#62;Nes::Singleton-&#62;{&#39;top_container&#39;}
    |  http://example.com/template.nhtml   |  
    |.----------------------------------.  |  
    ||  POST and GET ------------------------&#62;Nes::Singleton-&#62;{&#39;query&#39;}
    ||  Cookie ------------------------------&#62;Nes::Singleton-&#62;{&#39;cookies&#39;}
    |&#39;----------------------------------&#39;  |
    |.----------------------------------.  |
    ||&#60;html&#62;                            |----&#62;Nes::Singleton-&#62;{&#39;container&#39;}
    ||...                               |  | 
    || .-----------------------------.  |  |
    || |&#123;: include (&#39;obj1.nhtml&#39;) :&#125; |  |  |  
    || |                             |-------&#62;Nes::Singleton-&#62;{&#39;container&#39;}
    || |                             |  |  | 
    || &#39;-----------------------------&#39;  |  |
    ||...                               |  | 
    || .-----------------------------.  |  |
    || |&#123;: include (&#39;obj2.nhtml&#39;) :&#125; |  |  |
    || |                             |-------&#62;Nes::Singleton-&#62;{&#39;container&#39;}
    || |                             |  |  |  
    || &#39;-----------------------------&#39;  |  |  
    ||...                               |  |  
    ||&#60;/html&#62;                           |  |
    |&#39;----------------------------------&#39;  |
    &#39;--------------------------------------&#39;</pre>

<p>Nes::Singleton Object:</p>

<pre>    .--------------------.
    |   Nes::Singleton   |
    |--------------------|
    | {&#39;CFG&#39;}            |
    | {&#39;top_container&#39;}  |
    | {&#39;container&#39;}      |
    | {&#39;cookies&#39;}        |
    | {&#39;session&#39;}        |
    | {&#39;query&#39;}          |
    | {&#39;register&#39;}       |
    |--------------------|
    | new()              |
    | add()              |
    | out()              |
    | instance()         |
    &#39;--------------------&#39;</pre>


<dt><a name="Nes::Singleton-&gt;{'top_container'}">Nes::Singleton-&#62;{&#39;top_container&#39;}</a></dt>

<dd>
<p>Represents the Web page and all content. It creates a higher level container for other elements.</p>

<dt><a name="Nes::Singleton-&gt;{'container'}">Nes::Singleton-&#62;{&#39;container&#39;}</a></dt>

<dd>
<p>Represents the HTML, PHP, TXT, etc. content, or other files included in the template.</p>

<dt><a name="Nes::Singleton-&gt;{'query'}">Nes::Singleton-&#62;{&#39;query&#39;}</a></dt>

<dd>
<p>make:</p>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new;
    my $q   = $nes-&#62;{&#39;query&#39;}-&#62;{&#39;q&#39;};</pre>

<p>is equivalent to do:</p>

<pre>    use CGI;
    my $q = CGI-&#62;new;</pre>

<dt><a name="Nes::Singleton-&gt;{'cookies'}">Nes::Singleton-&#62;{&#39;cookies&#39;}</a></dt>

<dd>
<p>Represents the cookies.</p>

<dt><a name="Nes::Singleton-&gt;{'session'}">Nes::Singleton-&#62;{&#39;session&#39;}</a></dt>

<dd>
<p>Represents the user session.</p>

<dt><a name="Nes::Singleton-&gt;{'CFG'}">Nes::Singleton-&#62;{&#39;CFG&#39;}</a></dt>

<dd>
<p>Represents the settings for the directory containing the Top Container.</p>

<dt><a name="Nes::Singleton-&gt;{'register'}">Nes::Singleton-&#62;{&#39;register&#39;}</a></dt>

<dd>
<p>Represents access to plugins.</p>
</dd>


<p>Nes Request:</p>

<pre>    .-------------------------------------------.
    |         GET or POST HTTP Request          |
    |     http://example.com/template.nhtml     |
    &#39;-------------------------------------------&#39;
                        |
                        v
    .-------------------------------------------.
    |        /cgi-bin/nes/dispatch.cgi          |
    &#39;-------------------------------------------&#39;
                        |
                        v
    .-------------------------------------------.
    |              Nes::Singleton               |
    |-------------------------------------------|
    | new {&#39;CFG&#39;} for this dir                  |
    | new {&#39;top_container &#39;} for template.nhtml |
    &#39;-------------------------------------------&#39;

                        |
                        v
    .-------------------------------------------.
    |     Nes::Singleton-&#62;{&#39;top_container&#39;}     |
    |-------------------------------------------|
    | new {&#39;register&#39;}                          |
    | new {&#39;query&#39;}                             |
    | new {&#39;cookies&#39;}                           |
    | new {&#39;session&#39;}                           |
    | new {&#39;container&#39;} for template.nhtml      |
    &#39;-------------------------------------------&#39;             
                        |
                        v
    .-------------------------------------------.
    |       Nes::Singleton-&#62;{&#39;container&#39;}       | &#60;---.
    |-------------------------------------------|     |
    | get &#123;: NES 1.0 ... :&#125; line                |     |
    | new {&#39;content_obj&#39;} for this content type |     |
    &#39;-------------------------------------------&#39;     |          
                        |                             |
                        v                             |
    .-------------------------------------------.     |
    |             do Perl scripts               |     |
    |-------------------------------------------|     |
    | Nes::Singleton-&#62;out()                     |     |
    &#39;-------------------------------------------&#39;     |
                        |                             |
                        v                             |
    .-------------------------------------------.     |
    | Nes::Singleton-&#62;{&#39;container&#39;}-&#62;interpret  |     |
    &#39;-------------------------------------------&#39;     |
                        |                             |
                        v                       ( interaction )
             .---------------------.                  |
             | &#123;: include :&#125;   ?   |---[ yes ]--------&#39;

             &#39;---------------------&#39;                         
                        |
                      [ no ]
                        |
                        v
    .-------------------------------------------.
    | print HTTP Headers                        |
    | print the out                             |
    &#39;-------------------------------------------&#39;</pre>

<p>Nes Object:</p>

<pre>    .------------------------------------------------------------------------------------.
    |                                 | Nes Object |                                     |
    |                                 &#39;------------&#39;                                     |
    | .-----------------------------------.    .---------------------------------------. |
    | |          template.nhtml           |    |              script.pl                | |
    | |-----------------------------------|    |---------------------------------------| |
    | |                                   |---&#62;|                                       | |
    | |    &#123;: Nes 1.0 (&#39;script.pl&#39;) :&#125;    |    | Nes::Singleton-&#62;new(&#39;template.nhtml&#39;) | |
    | |                                   |&#60;---|                                       | |
    | &#39;-----------------------------------&#39;    &#39;---------------------------------------&#39; |
    &#39;------------------------------------------------------------------------------------&#39;</pre>

<p>Nes Callback:</p>

<pre>    .----------------------------------------------.
    |                 | Nes Object |               |
    |                 &#39;------------&#39;               |
    | .-------------------.    .-----------------. |
    | |  template.nhtml   |    |    script.pl    | |
    | |-------------------|    |-----------------| |
    | |        _          |---&#62;|    _       _    | |
    | |        |          |&#60;---|    |       |    | |
    | &#39;--------|----------&#39;    &#39;----|-------|----&#39; |
    &#39;----------|--------------------|-------|------&#39;

               |                    |       |
               |                    |       &#39;------------------.
               |                    |                          |
               v                    v                          v
    .----------------------.  .-----------------------.  .------------.
    |                      |  |                       |  |            |
    |  Nes Object Library  |  |  My App Perl Library  |  |    CPAN    |
    |                      |  |                       |  |            |
    &#39;----------------------&#39;  &#39;-----------------------&#39;  &#39;------------&#39;</pre>

<p>Nes Data Flow:</p>

<pre>    .------------.        .-----------------------.
    |            |        |                       |
    |    DATA    |-------&#62;|  My App Perl Library  |
    |            |        |                       |
    &#39;------------&#39;        &#39;-----------------------&#39;

           |                                |
           &#39;--------------------------.     |
    .---------------------------------|-----|-----.
    |                | Nes Object |   |     |     |
    |                &#39;------------&#39;   v     v     |
    | .------------------.    .-----------------. |
    | |  template.nhtml  |&#60;---|    script.pl    | |
    | &#39;------------------&#39;    &#39;-----------------&#39; |
    &#39;----------|----------------------------------&#39;
               v
    .---------------------.
    |         OUT         |
    &#39;---------------------&#39;</pre>

<h2><a name="Methods" href="#___top" title="click to go to top of document" class="u">Methods</a></h2>

<h3><a name="new" href="#___top" title="click to go to top of document" class="u">new</a></h3>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new(&#39;template.nhtml&#39;);</pre>

<p>Only require parameter if Nes is executed by CGI.</p>

<pre>    http://example.con/perl.cgi</pre>

<p>Or command line:</p>

<pre>    ./perl.cgi</pre>

<p>The parameter is ignored if executed Nes by template.</p>

<pre>    http://example.con/template.nhtml</pre>

<p>Nes should be run by calling the template, other methods are implemented to facilitate debugging.</p>

<h3><a name="out" href="#___top" title="click to go to top of document" class="u">out</a></h3>

<p>In the parameter we pass a copy of hash (%$hash) with the data we want to replace in the template.</p>

<pre>    my $nes_tags = {};
    $nes_tags-&#62;{&#39;hello&#39;} = &#39;Hello World!&#39;;
    $nes-&#62;out(%$nes_tag);

    ./.

    my %nes_tags;
    $nes_tags{&#39;hello&#39;} = &#39;Hello World!&#39;;
    $nes-&#62;out(%nes_tag);</pre>

<p>The method &#39;out&#39; does not exit script or immediately print values, your script can continue after call to out, but for clarity it is recommended to include at the end of script.</p>

<p>This will work:</p>

<pre>    ...
    $nes-&#62;out(%$nes_tag);
    &#38;foo($bar);
    ...</pre>

<p>For clarity use this:</p>

<pre>    ...
    &#38;foo($bar);
    $nes-&#62;out(%$nes_tag);
    ...</pre>

<h3><a name="add" href="#___top" title="click to go to top of document" class="u">add</a></h3>

<p>Added Tags without sending out. If you template:</p>

<pre>    &#123;: NES 1.0 (&#39;myscript1.pl&#39;,&#39;myscript2.pl&#39;) :&#125;</pre>

<p>If myscript1 and myscript2 defined Tags, mysqcript1 should have:</p>

<pre>    $nes-&#62;add(%tags);</pre>

<p>And myscript2:</p>

<pre>    $nes-&#62;out(%tags);</pre>

<p>If you call to out method in myscript1, the tags of myscript2 never be replaced. If you not call to out method in last script, the Tags never be replaced.</p>

<p>The routine use of the add method is in creating plugin.</p>

<h2><a name=".nes.cfg" href="#___top" title="click to go to top of document" class="u">.nes.cfg</a></h2>

<p>You .nes.cfg contains:</p>

<pre>    private_key   = pass3
    myscript_var1 = 50</pre>

<p>Then you can access:</p>

<pre>    use Nes;
    my $nes    = Nes::Singleton-&#62;new(&#39;template.nhtml&#39;);
    my $config = $nes-&#62;{&#39;CFG&#39;};

    my $var  = $config-&#62;{&#39;myscript_var1&#39;};
    my $pkey = $config-&#62;{&#39;private_key&#39;};

    # Global configuration
    my $pdir = $config-&#62;{&#39;plugin_top_dir&#39;};</pre>

<h2><a name="Session" href="#___top" title="click to go to top of document" class="u">Session</a></h2>

<pre>    my $nes     = Nes::Singleton-&#62;new();
    my $session = $nes-&#62;{&#39;session&#39;};

    # Create session:
    $session-&#62;create($user, $expire);

    # Get session:
    $user = $session-&#62;{&#39;user&#39;};

    # Delete session:
    $session-&#62;del;</pre>

<h2><a name="Query" href="#___top" title="click to go to top of document" class="u">Query</a></h2>

<pre>    use Nes;
    my $nes   = Nes::Singleton-&#62;new(&#39;template.nhtml&#39;);
    my $query = $nes-&#62;{&#39;query&#39;};
    my $q     = $query-&#62;{&#39;q&#39;};</pre>

<p>Nes::Singleton-&#62;{&#39;query&#39;}-&#62;{&#39;q&#39;} is equivalent to do:</p>

<pre>    use CGI;
    my $q = CGI-&#62;new;</pre>

<p>In addition to GET or POST with Nes::Singleton-&#62;{&#39;query&#39;} we pick parameters of Nes Objects in the following format:</p>

<pre>    objectname_param_number</pre>

<p>For our example the name of the object is lucky.nhtml, the extension is ignored, then the first parameter:</p>

<pre>    Nes::Singleton-&#62;{&#39;query&#39;}-&#62;{&#39;q&#39;}{&#39;lucky_param_1&#39;}</pre>

<p>The object name is:</p>

<pre>    my $obj = Nes::Singleton-&#62;{&#39;query&#39;}-&#62;{&#39;q&#39;}{&#39;obj_param_0&#39;};
    my $par = Nes::Singleton-&#62;{&#39;query&#39;}-&#62;{&#39;q&#39;}{$obj.&#39;_param_1&#39;};</pre>

<p>The following variables are available in .nes.cfg for POST control:</p>

<pre>    max_post   = 512  # Max kB. maximum size of POST.
    max_upload = 2048 # Max kB. maximum size of the upload, 0 none
    tmp_upload = 512  # In big upload, memory consumption is high,
                      # this defined from that kB. using a temporary
                      # file in the upload, preventing these are 
                      # loaded into memory. 
                      # * If tmp_upload is 0 or is greater than max_post, 
                      # max_upload limit will be equal to max_post. Therefore, 
                      # max_upload to take value, tmp_upload to be equal to or 
                      # less than max_post.                      </pre>

<p>For disable uploads, put this in you .nes.cfg:</p>

<pre>    max_upload = 0</pre>

<h3><a name="Query_Methods" href="#___top" title="click to go to top of document" class="u">Query Methods</a></h3>

<p>Access to query is via a patched version of CGI::Minimal (ver. 1.29). Most of the methods are accessible by creating an instance of CGI. No need to create a CGI object with new method, it automatically creates by Nes:</p>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new;
    my $cgi = $nes-&#62;{&#39;query&#39;}-&#62;{&#39;CGI&#39;};</pre>

<p>In this way we can access the methods of CGI::Minimal:</p>

<pre>    ...
    $param = $cgi-&#62;param(&#39;param&#39;);
    ...</pre>

<p>See: http://search.cpan.org/perldoc?CGI::Minimal</p>

<p>Our patched version includes temporary files and other modifications and define new methods and access to the most common:</p>


<dt><a name="param;">param;</a></dt>

<dd>
<p>Called without arguments, it returns the list of all defined form fields in the same order they appear in the data from the user agent.</p>

<p>If you include as parameter the name of the field, it returns the value (or an array, if you have multiple). If there is more than one value, the values are returned in the same order they appeared in the data from user agent.</p>

<p>Same as CGI::Minimal-&#62;param. See: http://search.cpan.org/perldoc?CGI::Minimal</p>

<dt><a name="get_upload_buffer">get_upload_buffer</a></dt>

<dd>
<p>Get te upload content by buffer:</p>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new;
    my $query = $nes-&#62;{&#39;query&#39;};
    ...
    while ( $query-&#62;get_upload_buffer(&#39;field_name&#39;,\$buffer) ) {
        print $fh $buffer;
    }
    ...</pre>

<dt><a name="get_upload_name">get_upload_name</a></dt>

<dd>
<p>Get the file name of upload by the field:</p>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new;
    my $query = $nes-&#62;{&#39;query&#39;};
    ...
    $file_name = $query-&#62;get_upload_name(&#39;field_name&#39;);</pre>

<dt><a name="get_upload_fh">get_upload_fh</a></dt>

<dd>
<p>Get the file handle of upload:</p>

<pre>    use Nes;
    my $nes = Nes::Singleton-&#62;new;
    my $query = $nes-&#62;{&#39;query&#39;};
    ...
    $fh = $query-&#62;get_upload_fh(&#39;field_name&#39;);</pre>

<dt><a name="upload_is_tmp">upload_is_tmp</a></dt>

<dd>
<p>Return true if upload is in tmp file:</p>

<pre>    $in_tmp_file = $query-&#62;upload_is_tmp(&#39;field_name&#39;);</pre>

<p>Depending on your max_post, tmp_upload and max_upload. The upload can be in a temporary file or memory.</p>

<p>This will always work, although the upload is in memory:</p>

<pre>    $fh = $query-&#62;get_upload_fh(&#39;field_name&#39;);
or:
    $query-&#62;get_upload_buffer(&#39;field_name&#39;,\$buffer)</pre>

<p>A little faster:</p>

<pre>    if ( ! $query-&#62;upload_is_tmp(&#39;field_name&#39;) ) {
        $content_upload = $query-&#62;{&#39;q&#39;}{&#39;field_name&#39;};
    }</pre>

<p>If the upload is in memory:</p>

<pre>    $file_name = $query-&#62;{&#39;q&#39;}{&#39;field_name&#39;};</pre>

<p>else:</p>

<pre>    $content_upload = $query-&#62;{&#39;q&#39;}{&#39;field_name&#39;};</pre>

<dt><a name="upload_max_size">upload_max_size</a></dt>

<dd>
<p>Return true if it has exceeded the maximum limit of max_upload .nes.cfg var.</p>

<dt><a name="post_max_size">post_max_size</a></dt>

<dd>
<p>Return true if it has exceeded the maximum limit of max_post .nes.cfg var.</p>

<dt><a name="get_buffer_raw">get_buffer_raw</a></dt>

<dd>
<p>Returns a copy of the raw form data to max_post:</p>

<pre>    $post_data_raw = $query-&#62;get_buffer;</pre>

<dt><a name="get_buffer">get_buffer</a></dt>

<dd>
<p>Returns a copy of the raw form data, including temporary files:</p>

<pre>    while ( my $buffer = $query-&#62;get_buffer ) {
        $post_data_raw .= $buffer;
    }</pre>

<dt><a name="get">get</a></dt>

<dd>
<p>Get a field:</p>

<pre>    $field = $query-&#62;{&#39;q&#39;}{&#39;field_name&#39;}
Same:
    $field = $query-&#62;get(&#39;field_name&#39;);</pre>

<dt><a name="set">set</a></dt>

<dd>
<p>Set a field:</p>

<pre>    $query-&#62;{&#39;q&#39;}{&#39;field_name&#39;} = &#39;value&#39;;
Same:
    $query-&#62;set(&#39;field_name&#39;, &#39;value&#39;);  </pre>

<dt><a name="del">del</a></dt>

<dd>
<p>Undef field:</p>

<pre>    $query-&#62;del(&#39;field_name&#39;);</pre>

<dt><a name="url_encode">url_encode</a></dt>

<dd>
<p>Returns URL encoding of input string.</p>

<dt><a name="url_decode">url_decode</a></dt>

<dd>
<p>Returns URL decoding of input string.</p>
</dd>



<p>
</p>

